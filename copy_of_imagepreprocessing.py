# -*- coding: utf-8 -*-
"""Copy of ImagePreprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x1fF_e2uvvkxaWDnhKqLJMktX9N-au9v
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt

image_path = '/content/sample_data/avengers.jpg'
image = cv2.imread(image_path)

gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
blurred_image = cv2.GaussianBlur(gray_image, (5, 5), 0)
edges = cv2.Canny(blurred_image, 100, 200)
_, thresholded_image = cv2.threshold(blurred_image, 127, 255, cv2.THRESH_BINARY)
dilated_image = cv2.dilate(thresholded_image, None, iterations=1)
eroded_image = cv2.erode(dilated_image, None, iterations=1)

plt.figure(figsize=(12, 8))

plt.subplot(2, 3, 1)
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.title("Original Image")
plt.axis('off')

plt.subplot(2, 3, 2)
plt.imshow(gray_image, cmap='gray')
plt.title("Grayscale Image")
plt.axis('off')

plt.subplot(2, 3, 3)
plt.imshow(blurred_image, cmap='gray')
plt.title("Blurred Image")
plt.axis('off')

plt.subplot(2, 3, 4)
plt.imshow(edges, cmap='gray')
plt.title("Edge Detection (Canny)")
plt.axis('off')

plt.subplot(2, 3, 5)
plt.imshow(thresholded_image, cmap='gray')
plt.title("Thresholded Image")
plt.axis('off')

plt.subplot(2, 3, 6)
plt.imshow(eroded_image, cmap='gray')
plt.title("Eroded Image")
plt.axis('off')

plt.show()